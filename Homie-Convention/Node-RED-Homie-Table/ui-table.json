{
    "customHeight": 18,
    "tabulator": {
        "responsiveLayout": "collapse",
        "responsiveLayoutCollapseStartOpen": false,
        "index": "$name",
        "layout": "fitColumns",
        "movableColumns": true,
        "groupBy": "",
        "columns": [
            {
                "formatter": "responsiveCollapse",
                "width": 30,
                "minWidth": 30,
                "align": "center",
                "resizable": false,
                "headerSort": false,
                "frozen": true,
                "title": "expand",
                "field": "expand",
                "headerVertical": "flip",
                "headerTooltip": "click to expand more details"
            },
            {
                "formatter": "function(cell, formatterParams, onRendered) {      var html = cell.getValue(); return html;  }",
                "title": "State",
                "field": "$stateIcon",
                "width": 100,
                "frozen": true,
                "headerVertical": "flip",
                "headerTooltip": "current state as icon: init, ready, lost, sleeping, disconnected or alert"
            },
            {
                "formatter": "function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }",
                "title": "Signal",
                "field": "signalIcon",
                "width": 100,
                "frozen": true,
                "headerVertical": "flip",
                "headerTooltip": "signal quality for wireless devices (signalIcon)"
            },
            {
                "title": "Name",
                "field": "$name",
                "width": 100,
                "frozen": true,
                "headerVertical": "flip",
                "headerTooltip": "name of the device ($name)",
                "editor": "input"
            },
            {
                "title": "State",
                "field": "$state",
                "width": 100,
                "align": "center",
                "headerVertical": "flip",
                "headerTooltip": "current state: init, ready, lost, sleeping, disconnected or alert"
            },
            {
                "title": "last seen",
                "field": "lastSeenreadyFormatted",
                "width": 100,
                "align": "left",
                "headerVertical": "flip",
                "headerTooltip": "time since the device was sending $state updates"
            },
            {
                "title": "Location",
                "field": "room",
                "width": 100,
                "headerTooltip": "location of the device (room)",
                "tooltip": true,
                "editor": "autocomplete",
                "editorParams": {
                    "allowEmpty": true,
                    "showListOnEmpty": true,
                    "values": true
                }
            },
            {
                "title": "<i class='fa fa-area-chart'></i> Statistics",
                "columns": [
                    {
                        "title": "<i class='fa fa-undo'></i>",
                        "field": "interval",
                        "width": 100,
                        "headerVertical": true,
                        "headerTooltip": "device update interval"
                    },
                    {
                        "formatterParams": {
                            "outputFormat": "d hh:mm:ss",
                            "inputFormat": "seconds",
                            "invalidPlaceholder": "(unknown)"
                        },
                        "title": "<i class='fa fa-clock-o'></i>",
                        "field": "uptime",
                        "formatter": "function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\"0\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\"d \"+pad(hours)+\":\"+pad(minutes);     else         return pad(hours)+\":\"+pad(minutes)+\":\"+pad(secs); }",
                        "width": 100,
                        "headerVertical": true,
                        "headerTooltip": "device uptime"
                    },
                    {
                        "formatterParams": {
                            "min": 0,
                            "max": 100,
                            "color": [
                                "red",
                                "orange",
                                "green"
                            ],
                            "legend": "function (value) {if (value>0) return \"<span style='color:#FFFFFF;'>\"+value+\" %</span>\"; else return; }",
                            "legendColor": "#FFFFFF",
                            "legendAlign": "center"
                        },
                        "title": "<i class='fa fa-signal'></i>",
                        "field": "signal",
                        "formatter": "progress",
                        "width": 100,
                        "headerVertical": true,
                        "headerTooltip": "device wireless signal quality"
                    },
                    {
                        "formatterParams": {
                            "min": 2.5,
                            "max": 3.5,
                            "color": [
                                "red",
                                "green",
                                "red"
                            ],
                            "legend": "function (value) { if (value>0) return \"<span style='color:#FFFFFF;'>\"+value+\" V</span>\"; else return; }",
                            "legendColor": "#101010",
                            "legendAlign": "center"
                        },
                        "title": "<i class='fa fa-plug'></i>",
                        "field": "supply",
                        "formatter": "progress",
                        "width": 100,
                        "headerVertical": true,
                        "headerTooltip": "device supply voltage"
                    },
                    {
                        "formatterParams": {
                            "min": 0,
                            "max": 100,
                            "color": [
                                "red",
                                "orange",
                                "green"
                            ],
                            "legend": "function (value) {     if (value>0)         return \"<span style='color:#FFFFFF;'>\"+value+\" %</span>\";     else         return; }",
                            "legendColor": "#101010",
                            "legendAlign": "center"
                        },
                        "title": "<i class='fa fa-battery-2'></i>",
                        "field": "battery",
                        "formatter": "progress",
                        "width": 100,
                        "headerVertical": true,
                        "headerTooltip": "device battery level in %"
                    },
                    {
                        "formatterParams": {
                            "min": 0,
                            "max": 100000,
                            "color": [
                                "red",
                                "orange",
                                "green"
                            ],
                            "legend": "function (value) { if (value>0) return \"<span style='color:#FFFFFF;'>\"+(value/1024).toFixed(2)+\" kB</span>\"; else return; }",
                            "legendColor": "#101010",
                            "legendAlign": "center"
                        },
                        "title": "<i class='fa fa-microchip'></i>",
                        "field": "freeheap",
                        "formatter": "progress",
                        "width": 100,
                        "headerVertical": true,
                        "headerTooltip": "device free heap memory in kb"
                    },
                    {
                        "formatterParams": {
                            "min": 0,
                            "max": 100,
                            "color": [
                                "red",
                                "orange",
                                "green"
                            ],
                            "legend": "function (value) {     if (value>0)         return \"<span style='color:#FFFFFF;'>\"+value+\" %</span>\";     else         return; }",
                            "legendColor": "#101010",
                            "legendAlign": "center"
                        },
                        "title": "<i class='fa fa-tasks'></i>",
                        "field": "cpuload",
                        "formatter": "progress",
                        "width": 100,
                        "headerVertical": true,
                        "headerTooltip": "device cpu load in %"
                    },
                    {
                        "formatterParams": {
                            "min": 20,
                            "max": 60,
                            "color": [
                                "green",
                                "orange",
                                "red"
                            ],
                            "legend": "function (value) { if (value>0) return \"<span style='color:#FFFFFF;'>\"+value+\" Â°C</span>\"; else return; }",
                            "legendColor": "#101010",
                            "legendAlign": "center"
                        },
                        "title": "<i class='fa fa-thermometer-half'></i>",
                        "field": "cputemp",
                        "formatter": "progress",
                        "width": 100,
                        "headerVertical": true,
                        "headerTooltip": "device cpu temperature in Â°C"
                    }
                ]
            },
            {
                "title": "<i class='fa fa-code'></i>Firmware",
                "columns": [
                    {
                        "formatter": "link",
                        "formatterParams": {
                            "labelField": "$localip",
                            "urlPrefix": "http://",
                            "target": "_blank"
                        },
                        "title": "IP",
                        "field": "$localip",
                        "width": 100,
                        "headerTooltip": "device local IP-Address ($localip)"
                    },
                    {
                        "title": "mac",
                        "field": "$mac",
                        "width": 100,
                        "headerTooltip": "device mac address ($mac)"
                    },
                    {
                        "title": "Access Point",
                        "field": "SSID",
                        "width": 100,
                        "headerTooltip": "access point the device device is connected to (provided by http json request)"
                    },
                    {
                        "title": "Firmware",
                        "field": "name",
                        "width": 100,
                        "headerTooltip": "name of the firmware ($fw/name)"
                    },
                    {
                        "title": "Version",
                        "field": "version",
                        "width": 100,
                        "headerTooltip": "version of the firmware ($fw/version)"
                    },
                    {
                        "title": "Homie",
                        "field": "$homie",
                        "width": 100,
                        "align": "left",
                        "headerVertical": "flip",
                        "headerTooltip": "homie version ($version)"
                    },
                    {
                        "title": "Platform",
                        "field": "$implementation",
                        "width": 100,
                        "align": "left",
                        "headerVertical": "flip",
                        "headerTooltip": "name of the platform ($implementation)",
                        "tooltip": true
                    },
                    {
                        "title": "Last Boot Cause",
                        "field": "lastBootCause",
                        "width": 100,
                        "headerTooltip": "last cause of reboot (provided by http json request)"
                    },
                    {
                        "title": "Reset Reason",
                        "field": "resetReason",
                        "width": 100,
                        "headerTooltip": "last reason of reset (provided by http json request)"
                    },
                    {
                        "title": "Reset Count",
                        "field": "resetTotal",
                        "width": 100,
                        "headerTooltip": "number of resets (provided by resetCounter node)"
                    },
                    {
                        "title": "avg. uptime",
                        "field": "resetAverage",
                        "width": 100,
                        "headerTooltip": "average uptime between resets (provided by resetCounter node)",
                        "formatter": "function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\"0\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\"d \"+pad(hours)+\":\"+pad(minutes);     else         return pad(hours)+\":\"+pad(minutes)+\":\"+pad(secs); }"
                    },
                    {
                        "formatterParams": {
                            "min": 0,
                            "max": 100,
                            "color": [
                                "red",
                                "orange",
                                "green"
                            ],
                            "legend": "function (value) {     if (value>0)         return \"<span style='color:#FFFFFF;'>\"+Number(value).toFixed(2)+\" %</span>\";     else         return; }",
                            "legendColor": "#101010",
                            "legendAlign": "center"
                        },
                        "formatter": "progress",
                        "title": "<i class='fa fa-moon-o'></i> sleep ratio",
                        "field": "sleepRatio",
                        "width": 100,
                        "headerTooltip": "ratio between sleep and awake (provided by sleepTimer node)"
                    }
                ]
            }
        ],
        "columnResized": "function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }",
        "columnMoved": "function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }",
        "rowFormatter": "function(row){     var data = row.getData();     switch (data.$state) {         case \"lost\":             row.getElement().style.backgroundColor = \"#9e2e66\";             row.getElement().style.color = \"#a6a6a6\";             break;         case \"sleeping\":             row.getElement().style.backgroundColor = \"#336699\";             break;         case \"disconnected\":             row.getElement().style.backgroundColor = \"#cc3300\";             row.getElement().style.color = \"#a6a6a6\";             break;         case \"alert\":             row.getElement().style.backgroundColor = \"#A6A6DF\";             break;         case \"init\":             row.getElement().style.backgroundColor = \"#f2f20d\";             break;         case \"ready\":             row.getElement().style.backgroundColor = \"\";             row.getElement().style.color = \"\";             break;         } }",
        "rowContext": "function(e, row){     this.send({ui_control:{callback:'rowContext'},position:{\"x\":e.x,\"y\":e.y},payload:row._row.data.$name,\"rowIndex\":row._row.data.$name});     e.preventDefault(); }"
    }
}